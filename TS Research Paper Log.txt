library(dplyr)
library(readr)
library(tseries)
library(scales)
library(ggplot2)

MarlinsPark <- Marlins_Park_1_mile_radius_retail %>% select(Quarter, `All Service Type Rent Overall`)
Miami <- Miami_retail_historical_data %>% select(Quarter, `All Service Type Rent Overall`)
names(Miami) <- c("Quarter", "Miami Rent")
Miami <- cbind(MarlinsPark , Miami)
names(Miami) <- c("Quarter", "1-Mile Rent", "QTR" , "Miami Rent")
Miami <- Miami %>% select(Quarter, "1-Mile Rent", `Miami Rent`)

ts.Mile <- ts(rev(Miami$`1-Mile Rent`), start = 2006, end = 2018, frequency = 4)
ts.Rent <- ts(rev(Miami$`Miami Rent`), start = 2006, end = 2018, frequency = 4)

#Plot Marlins 1-Mile Retail and Miami Retail 
ts.plot(ts.Mile, ts.Rent, lty=1:2, col = c("black", "dodger blue"), lwd=c(2,2), main = "Marlins Park 1-Mile Retail and Miami Retail 2006 - 2018")

##Miami Office:
Office <- Miami_office_historical_data %>% select(Quarter, `Office Gross Rent Overall`)
Marlins.Office <- Marlins_Park_1_mile_radius_office %>% select(Quarter, `Office Gross Rent Overall`)
names(Marlins.Office) <- c("Quarter", "1-Mile Office")

ts.Office <- ts(rev(Office$`Office Gross Rent Overall`), start = 1999, end = 2018, frequency = 4)
ts.Marlins.Office <- ts(rev(Marlins.Office$`Office Gross Rent Overall`), start = 1999, end = 2018, frequency = 4)

ts.plot(ts.Office, ts.Marlins.Office, lty=1:2, col = c("red", "dodger blue"), lwd=c(2,2), main = "Marlins Park 1-Mile Office and Miami Office 1999 - 2018")

##Plotting all together
ts.plot(ts.Mile, ts.Rent, ts.Marlins.Office, ts.Office, lty = c(1,2,1,2), col= c("black", "black", "dodger blue", "dodger blue"), main = "Miami Marlins Stadium ")
legend(1999,35, c("1-Mile Retail","Miami Retail", "1-Mile Office", "Miami Office"),lty=c(1,2,1,2), col=c("black", "black", "dodger blue" , "dodger blue") , lwd=c(2,2,2,2)) 
abline(v=c("2009" , "2012", col = c("green", "orange"), lty  = 1, lwt = 2))


#Difference
diff.1mile <- diff(ts.Mile)
diff.retail <- diff(ts.Rent)
diff.office <- diff(ts.Office)
diff.Marlins.office <- diff(ts.Marlins.Office)

plot((diff.1mile),type = "l", main = "Marlins Park: 1-Mile Retail DIFF")
plot((diff.retail), type = "l",main = "Miami Retail DIFF")
plot((diff.office), type = "l",main = "Miami Office DIFF")
plot((diff.Marlins.office), type = "l", main = "Marlins Park: 1-Mile Office DIFF")

##Second Difference Test:
diff2.1mile <- diff(diff(ts.Mile))
diff2.retail <- diff(diff(ts.Rent))
diff2.office <- diff(diff(ts.Office))
diff2.Marlins.office <- diff(diff(ts.Marlins.Office))

#ACF 
acf(diff.1mile)
acf(diff.retail)
acf(diff.office)
acf(diff.Marlins.office)

##ACF of second difference 
acf(diff2.1mile)
acf(diff2.retail)
acf(diff2.office)
acf(diff2.Marlins.office)

##Need ot ensure each time series is stationary for the model results to hold. Use PP and ADF tests for stationarity. 
#Stationary Tests: All the differenced values are stationary according to Dickey-Fuller Test

#Marlins 1-Mile Retail 
adf.test(ts.Mile, k=0)
#Non-stationary 

adf.test(diff.1mile, k=0)
#Stationary

#Miami Retail Rent
adf.test(ts.Rent, k=0)
#Non-Stationary 

adf.test(diff.retail, k=0)
#Stationary

#Marlins 1-Mile Office
adf.test(ts.Marlins.Office, k=0)
#Non-Stationary 

adf.test(diff.Marlins.office, k=0)
#Stationary 

#Miami Office 
adf.test(ts.Office, k=0)
#Non-Stationary 

adf.test(diff.office, k=0)
#Stationary


## Try get best arima
#get.best.arima function----------
get.best.arima <- function(ts.Office, maxord = c(3,3,3,3,3,3))
{ 
  best.aic <- 1e8
  n <- length(ts.Office)
    for (p in 0:maxord[1]) for(d in 0:maxord[2]) for(q in 0:maxord[3]) 
      for (P in 0:maxord[4]) for(D in 0:maxord[5]) for(Q in 0:maxord[6]) 
      {  
        fit <- arima(ts.Office, order = c(p,d,q),  
                  seas = list(order = c(P,D,Q), 
                              frequency(ts.Office)), method = "CSS")
        
        fit.aic <- -2 * fit$loglik + (log(n) + 1) * length(fit$coef)
        if (fit.aic < best.aic) 
        {   
          best.aic <- fit.aic
          best.fit <- fit
          best.model <- c(p,d,q,P,D,Q)  }  } 

list(best.aic, best.fit, best.model)
}

#Best ARIMA for Miami Office: Use ts.Office
get.best.MIA_Office <- get.best.arima((ts.Office), maxord=c(3,3,3,3,3,3))
best.fit.MIA_Office <- get.best.MIA_Office[[2]]
acf( resid(best.fit.MIA_Office))
get.best.MIA_Office[[3]]

#Best ARIMA for Marlins Office: Use ts.Marlins.Office
get.best.Marlins_Office <- get.best.arima((ts.Marlins.Office), maxord = c(3,3,3,3,3,3))
best.fit.Marlins_Office <- get.best.Marlins_Office[[2]]
acf( resid(best.fit.Marlins_Office))
get.best.Marlins_Office[[3]]

#Best ARIMA for Miami Retail: Use ts.Rent
get.best.Miami_Retail <- get.best.arima((ts.Rent), maxord = c(3,3,3,3,3,3))
best.fit.Miami_Retail <- get.best.Miami_Retail[[2]]
acf( resid(best.fit.Miami_Retail))
get.best.Miami_Retail[[3]]

#Best ARIMA for Marlins Retail 1-Mile: use ts.Mile
get.best.Marlins_Retail <- get.best.arima((ts.Mile), maxord = c(3,3,3,3,3,3))
best.fit.Marlins_Retail <- get.best.Marlins_Retail[[2]]
acf( resid(best.fit.Marlins_Retail))
get.best.Marlins_Retail[[3]]

##Fit models to data using the get.best ARIMA results:
arima.Miami.Office <- arima(ts.Office, order = c(1,2,1), seasonal = list(order = c(2,0,0)))
arima.Marlins.Office <- arima(ts.Marlins.Office, order = c(2,0,2), seasonal = list(order = c(2,1,1)))
arima.Miami.Retail <- arima(ts.Rent, order = c(3,2,2), seasonal = list(order = c(3,3,1)))
arima.Marlins.Retail <- arima(ts.Mile, order = c(3,2,3), seasonal = list(order = c(3,1,1)))

##Model Coefficients: 
coef(arima.Marlins.Office)
coef(arima.Marlins.Retail)
coef(arima.Miami.Office)
coef(arima.Miami.Retail)

##Square the residuals from the fitted ARIMA models for each, if the squared residuals look volitile, then a GARCH is appropriate:
##Test for Quared Residuals:

#Marlins Office:
res.Marlins.Office <- resid(arima.Marlins.Office)
layout(1:2)
acf(res.Marlins.Office)
acf((res.Marlins.Office)^2)
##Result: Residuals are not volitle, variance is stationary 

#Miami Office:
res.Miami.Office <- resid(arima.Miami.Office)
layout(1:2)
acf(res.Miami.Office)
acf((res.Miami.Office)^2)
#ACF of Miami Office residuals^2 looks volative, GARCH may be appropriate. 

#Miami Office - GARCH
garch.Miami.Office <- garch(res.Miami.Office, trace = F)
t(confint(garch.Miami.Office))
garch.res.Miami.Office <- resid(garch.Miami.Office)[-1]
layout(1:2)
acf(garch.res.Miami.Office)
acf(garch.res.Miami.Office^2)

##ACF of Residuals^2 show significant lag @ 4

##Marlins Retail:
res.Marlins.Retail <- resid(arima.Marlins.Retail)
layout(1:2)
acf(res.Marlins.Retail)
acf((res.Marlins.Retail)^2)
#Residuals look stationary, variance is stationary

##Miami Retial:
res.Miami.Retail <- resid(arima.Miami.Retail)
layout(1:2)
acf(res.Miami.Retail)
acf((res.Miami.Retail)^2)
##Residuals look stationary

##Exploring Mulitfamily 
ts.Family.Mile <- ts(rev(Multifamily$`Asking Rent Per Unit`), start = 2000, end = 2018, frequency = 4)
ts.plot(ts.Family.Mile, ts.Mile, lty=1:2,col = c("black", "orange"),lwd=c(2,2), main = "Marlins Park 1-Mile Retail and Multifamily Rent 2000 - 2018")


